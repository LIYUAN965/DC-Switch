{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The purpose of this service is to provide an application to help manage db switch task",
    "title": "DCSwitch API",
    "version": "0.0.1"
  },
  "host": "127.0.0.1",
  "paths": {
    "/config": {
      "get": {
        "description": "获取配置数据",
        "operationId": "GetConfigParam",
        "responses": {
          "200": {
            "$ref": "#/responses/GetConfigResp"
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "description": "health check url",
        "operationId": "HealthCheckParam",
        "responses": {
          "200": {
            "$ref": "#/responses/HealthCheckResp"
          }
        }
      }
    },
    "/switch/preparation/edit/{id}": {
      "patch": {
        "description": "编辑准备项",
        "operationId": "EditPrepareParam",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "x-go-name": "Content"
                },
                "title": {
                  "type": "string",
                  "x-go-name": "Title"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/switch/preparation/{id}": {
      "get": {
        "description": "获取所有切换版本信息",
        "operationId": "GetPrepareParam",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetPrepareResp"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/switch/preparations/{versionId}": {
      "get": {
        "description": "获取所有切换版本信息",
        "operationId": "GetAllPreparesParam",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "VersionId",
            "name": "versionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetAllPreparesResp"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/switch/version/date/{id}": {
      "patch": {
        "description": "编辑切换版本名",
        "operationId": "EditVersionDate",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "x-go-name": "Date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/switch/versions": {
      "get": {
        "description": "获取所有切换版本信息",
        "operationId": "GetAllVersionsParam",
        "responses": {
          "200": {
            "$ref": "#/responses/GetAllVersionsResp"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/task/switch/module/detail": {
      "post": {
        "description": "模块明细 start/success/fail",
        "operationId": "ModuleDetailTask",
        "parameters": [
          {
            "example": "{\"type\": \"start\", \"name\": \"DBASwitch1\"}",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                },
                "type": {
                  "type": "string",
                  "pattern": "/start|success|fail/",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/version/{id}": {
      "get": {
        "description": "根据id获取切换版本信息",
        "operationId": "GetVersionParam",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetVersionResp"
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "慢查询模拟",
        "operationId": "GetMockSlow",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Id",
            "description": "an id of user info",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetMockSlowResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Domain": {
      "description": "version_domain 切换域",
      "type": "object",
      "properties": {
        "AppDomain": {
          "type": "string"
        },
        "DelFlag": {
          "type": "integer",
          "format": "int64"
        },
        "DomainArchitect": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Type": {
          "type": "string"
        },
        "Version": {
          "$ref": "#/definitions/SwitchVersion"
        }
      },
      "x-go-package": "dcswitch/internal/domain"
    },
    "Prepare": {
      "description": "version_domain_prepare 切换准备项",
      "type": "object",
      "properties": {
        "Content": {
          "type": "string"
        },
        "CreateTime": {
          "type": "string"
        },
        "CreateUser": {
          "type": "string"
        },
        "DelFlag": {
          "type": "integer",
          "format": "int64"
        },
        "Domain": {
          "$ref": "#/definitions/Domain"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "Sequence": {
          "type": "integer",
          "format": "int64"
        },
        "Status": {
          "type": "integer",
          "format": "int64"
        },
        "Title": {
          "type": "string"
        },
        "UpdateTime": {
          "type": "string"
        },
        "UpdateUser": {
          "type": "string"
        }
      },
      "x-go-package": "dcswitch/internal/domain"
    },
    "SwitchVersion": {
      "description": "SwitchVersion 切换演练版本",
      "type": "object",
      "properties": {
        "CreateTime": {
          "type": "string"
        },
        "CreateUser": {
          "type": "string"
        },
        "Id": {
          "type": "integer",
          "format": "int64"
        },
        "VersionDate": {
          "type": "string"
        }
      },
      "x-go-package": "dcswitch/internal/domain"
    }
  },
  "responses": {
    "GetAllPreparesResp": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "prepares": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Prepare"
            },
            "x-go-name": "Prepares"
          }
        }
      }
    },
    "GetAllVersionsResp": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SwitchVersion"
            },
            "x-go-name": "Versions"
          }
        }
      }
    },
    "GetConfigResp": {
      "description": "",
      "schema": {
        "type": "object"
      }
    },
    "GetMockSlowResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Id"
          }
        }
      }
    },
    "GetPrepareResp": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "prepare": {
            "$ref": "#/definitions/Prepare"
          }
        }
      }
    },
    "GetVersionResp": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/definitions/SwitchVersion"
          }
        }
      }
    },
    "HealthCheckResp": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Status",
            "example": 200
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "TOKEN",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ]
}